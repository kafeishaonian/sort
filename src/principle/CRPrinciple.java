package principle;

/**
 * 合成复用原则
 * 定义：
 *      要求在软件复用时，要尽量先使用组合或者是聚合等关联关系来实现，其次才在考虑继承关系来实现
 * 重要性：
 *   继承服用的缺点：
 *      1.继承服用破坏了类的封装性。因为继承会将父类的实现细节暴露给自类，父类对子类是透明的，所以这种复用又称为白箱复用
 *      2.子类与父类的耦合度高。父类的实现的任何改变会导致子类的实现发生变化，这不利于类的扩展和维护
 *      3.它限制了复用的灵活性。从父类继承而来的实现是静态的，在编译时已经定义了，所有在运行时不可能发生变化
 *   组合复用（聚合复用）的有点：
 *      1.它维持了类的封装性。因为成分对象的内部细节是新对象看不见的，所以这种复用又称为黑箱复用。
 *      2.新旧类之间的耦合度低。这种复用所需的依赖较少，新对象存取成分对象的唯一方法是通过成分对象的接口。
 *      3.复用的灵活性高。这种复用可以在运行时动态进行，新对象可以动态的引用成分对象类型相同的对象。
 * 实现方式：
 *      通过已有的对象纳入新对象中，作为新对象的成员对象来实现，新对象可以调用已有对象的功能，从而达到复用。
 */
public class CRPrinciple {
}
